<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>blueocean-parent</artifactId>
        <groupId>io.jenkins.blueocean</groupId>
        <version>${revision}${changelist}</version>
    </parent>

    <name>Blue Ocean Pipeline Editor</name>
    <description>
        The Blue Ocean Pipeline Editor is the simplest way for anyone wanting to get started with creating Pipelines in Jenkins
    </description>

    <artifactId>blueocean-pipeline-editor</artifactId>
    <packaging>hpi</packaging>

    <url>https://github.com/jenkinsci/blueocean-plugin/blob/master/blueocean/doc/BlueOcean.adoc</url>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/licenses/MIT</url>
        </license>
    </licenses>

    <developers>
     <developer>
       <id>sophistifunk</id>
       <name>Josh McDonald</name>
     </developer>
     <developer>
       <id>kzantow</id>
       <name>Keith Zantow</name>
     </developer>
     <developer>
       <id>abayer</id>
       <name>Andrew Bayer</name>
     </developer>
    </developers>

    <profiles>
        <profile>
        <id>checkerframework</id>
        <activation>
            <jdk>[1.8,)</jdk>
        </activation>
        <build>
            <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                <fork>true</fork> <!-- Must fork or else JVM arguments are ignored. -->
                <meminitial>1000m</meminitial>
                <maxmem>4000m</maxmem>
                <compilerArguments>
                    <Xmaxerrs>10000</Xmaxerrs>
                    <Xmaxwarns>10000</Xmaxwarns>
                </compilerArguments>
                <annotationProcessorPaths>
                    <path>
                    <groupId>org.checkerframework</groupId>
                    <artifactId>checker</artifactId>
                    <version>3.26.0</version>
                    </path>
                </annotationProcessorPaths>
                <annotationProcessors>
                    <!-- Add all the checkers you want to enable here -->
                    <annotationProcessor>org.checkerframework.checker.tainting.TaintingChecker</annotationProcessor>
                </annotationProcessors>
                <compilerArgs>
                    <!-- -Awarns turns type-checking errors into warnings. -->
                    <arg>-Awarns</arg> 
                </compilerArgs>
                </configuration>
            </plugin>
            </plugins>
        </build>
        <dependencies>
            <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>checker</artifactId>
            <version>3.26.0</version>
            </dependency>
        </dependencies>
        </profile>

        <profile>
        <id>checkerframework-jdk9orlater</id>
        <activation>
        <jdk>[9,)</jdk>
        </activation>
        <build>
        <plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
            <fork>true</fork>
            <compilerArgs combine.children="append">
            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>
            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
            </compilerArgs>
            </configuration>
        </plugin>
        </plugins>
        </build>
        <properties>
            <!-- Needed for animal-sniffer-maven-plugin version 1.19 (version 1.20 is fixed). -->
            <animal.sniffer.skip>true</animal.sniffer.skip>
        </properties>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blueocean-rest</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blueocean-dashboard</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blueocean-commons</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blueocean-pipeline-api-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jenkinsci.plugins</groupId>
            <artifactId>pipeline-model-definition</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>sonar</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>ant</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.checkerframework/checker-qual -->
        <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>checker-qual</artifactId>
            <version>3.26.0</version>
        </dependency>
    </dependencies>
</project>
